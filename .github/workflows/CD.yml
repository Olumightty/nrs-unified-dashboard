name: CD Workflow

on:
  workflow_run:
    workflows: ["CI Workflow"]
    branches:
      - main
    types:
      - completed

jobs:
  deploy-to-dockerhub:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout code
        uses: actions/checkout@v4

      #  Extract docker image metadata from the metadata actions
      - name: Extract Docker Image Metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          # get details from github secrets and varibles
          images: ${{ vars.DOCKER_USERNAME }}/${{ vars.DOCKER_REPO_NAME }}
          tags: |
            type=raw,value=${{ vars.DOCKER_TAG }}

        # log in to docker  hub with your creds
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

        # set up docker builder
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

        # build and push image to docker hub
      - name: Build and Push Docker image to Doker Hub
        uses: docker/build-push-action@v6
        with:
          push: ${{github.event_name != 'pull_request'}}
          tags: ${{steps.meta.outputs.tags}}
          annotations: ${{steps.meta.outputs.annotations}}
          provenance: true
          sbom: true

  deploy-to-aws:
    if: ${{github.event_name != 'pull_request'}}
    needs: deploy-to-dockerhub
    runs-on: ubuntu-latest

    steps:
      - name: Deploy to EC2 via SSH
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          script: |
            sudo docker stop nrs-unified || true
            sudo docker rm -f nrs-unified || true
            sudo docker rmi -f  ${{ vars.DOCKER_USERNAME }}/${{ vars.DOCKER_REPO_NAME }}:${{ vars.DOCKER_TAG }} || true
            sudo docker pull ${{ vars.DOCKER_USERNAME }}/${{ vars.DOCKER_REPO_NAME }}:${{ vars.DOCKER_TAG }}
            sudo docker run -d --env-file=./nrs/.env --name nrs-unified -p 3000:${{ vars.DOCKER_PORT }} ${{ vars.DOCKER_USERNAME }}/${{ vars.DOCKER_REPO_NAME }}:${{ vars.DOCKER_TAG }}